apply plugin: 'com.android.application'

ext {
    // App version in semver format (https://semver.org/)
    versionMajor = 0
    versionMinor = 4
    versionPatch = 4
}

project.version = "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        applicationId "su.comp.bk"

        minSdkVersion 14
        targetSdkVersion 29

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        versionCode versionMajor * 1000000 + versionMinor * 1000 + versionPatch
        versionName "${project.version}"
    }

    // Test resources management
    sourceSets {
        test {
            resources.srcDirs += ['src/test/resources']
            resources.srcDirs += ['src/main/res/raw']
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // Release management
    signingConfigs {
        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            keyAlias properties.getProperty('key.alias')
            keyPassword properties.getProperty('key.password')
            storeFile file(properties.getProperty('key.store.file'))
            storePassword properties.getProperty('key.store.password')
        }
    }
    buildTypes {
        debug {
            versionNameSuffix "-debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            signingConfig signingConfigs.release
        }
    }

    // Release artifacts management
    def apk = file('build/outputs/apk/release/app-release.apk')
    def mapping = file('build/outputs/mapping/release/mapping.txt')
    repositories {
        flatDir {
            name "buildArchive"
            dirs "${project.buildDir}/archive"
        }
    }
    uploadArchives {
        repositories {
            add project.repositories.buildArchive
        }
    }
    artifacts {
        archives file: apk, name: "bkemu-release"
        archives file: mapping, name: "bkemu-release-mapping"
    }
    task archiveBuild(dependsOn:uploadArchives)
}

dependencies {
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'

    implementation 'commons-lang:commons-lang:2.6'
    implementation 'com.samskivert:jmustache:1.9'
    implementation 'com.andkulikov:transitionseverywhere:2.0.0-alpha01'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'commons-io:commons-io:2.4'
    testImplementation 'org.robolectric:robolectric:4.3'
}